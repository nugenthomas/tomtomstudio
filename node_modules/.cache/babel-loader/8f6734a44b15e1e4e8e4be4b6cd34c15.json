{"ast":null,"code":"var _jsxFileName = \"/Users/thomasnguyen/Documents/GitHub/react-portfolio/src/components/work/WorkCard.js\";\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport WorkModal from './WorkModal';\nconst Card = styled.div`\n  align-items: center;\n  background: #2bc0e4; /* fallback for old browsers */\n  background: white;\n  border-radius: 20px;\n  cursor: pointer;\n  display: flex;\n  height: 15rem;\n  justify-content: center;\n  margin: auto;\n  position: relative;\n  width: 100%;\n`;\nconst Title = styled.h2`\n  color: white;\n  font-family: ${({\n  theme\n}) => theme.fonts.title};\n`;\n\nconst WorkCard = ({\n  project\n}) => {\n  const [modalOpen, setModalOpen] = useState(false);\n\n  const toggleModalOpen = () => {\n    document.querySelector('body').style.overflow = !modalOpen ? 'hidden' : 'initial';\n    setModalOpen(!modalOpen);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(WorkModal, {\n    toggleModalOpen: toggleModalOpen,\n    onClose: toggleModalOpen,\n    open: modalOpen,\n    project: project,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Card, {\n    onClick: toggleModalOpen,\n    background: project.background,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, project.projectTitle)));\n};\n\nWorkCard.propTypes = {\n  project: PropTypes.object.isRequired\n};\nexport default WorkCard;","map":{"version":3,"sources":["/Users/thomasnguyen/Documents/GitHub/react-portfolio/src/components/work/WorkCard.js"],"names":["React","useState","PropTypes","styled","WorkModal","Card","div","Title","h2","theme","fonts","title","WorkCard","project","modalOpen","setModalOpen","toggleModalOpen","document","querySelector","style","overflow","background","projectTitle","propTypes","object","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AAEA,MAAMC,IAAI,GAAGF,MAAM,CAACG,GAAI;;;;;;;;;;;;CAAxB;AAcA,MAAMC,KAAK,GAAGJ,MAAM,CAACK,EAAG;;iBAEP,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACC,KAAN,CAAYC,KAAM;CAFlD;;AAKA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAiB;AAChC,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4Bd,QAAQ,CAAC,KAAD,CAA1C;;AAEA,QAAMe,eAAe,GAAG,MAAM;AAC5BC,IAAAA,QAAQ,CAACC,aAAT,CAAuB,MAAvB,EAA+BC,KAA/B,CAAqCC,QAArC,GAAgD,CAACN,SAAD,GAC5C,QAD4C,GAE5C,SAFJ;AAGAC,IAAAA,YAAY,CAAC,CAACD,SAAF,CAAZ;AACD,GALD;;AAOA,sBACE,uDACE,oBAAC,SAAD;AACE,IAAA,eAAe,EAAEE,eADnB;AAEE,IAAA,OAAO,EAAEA,eAFX;AAGE,IAAA,IAAI,EAAEF,SAHR;AAIE,IAAA,OAAO,EAAED,OAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAOE,oBAAC,IAAD;AAAM,IAAA,OAAO,EAAEG,eAAf;AAAgC,IAAA,UAAU,EAAEH,OAAO,CAACQ,UAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQR,OAAO,CAACS,YAAhB,CADF,CAPF,CADF;AAaD,CAvBD;;AAyBAV,QAAQ,CAACW,SAAT,GAAqB;AACnBV,EAAAA,OAAO,EAAEX,SAAS,CAACsB,MAAV,CAAiBC;AADP,CAArB;AAIA,eAAeb,QAAf","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport WorkModal from './WorkModal';\n\nconst Card = styled.div`\n  align-items: center;\n  background: #2bc0e4; /* fallback for old browsers */\n  background: white;\n  border-radius: 20px;\n  cursor: pointer;\n  display: flex;\n  height: 15rem;\n  justify-content: center;\n  margin: auto;\n  position: relative;\n  width: 100%;\n`;\n\nconst Title = styled.h2`\n  color: white;\n  font-family: ${({ theme }) => theme.fonts.title};\n`;\n\nconst WorkCard = ({ project }) => {\n  const [modalOpen, setModalOpen] = useState(false);\n\n  const toggleModalOpen = () => {\n    document.querySelector('body').style.overflow = !modalOpen\n      ? 'hidden'\n      : 'initial';\n    setModalOpen(!modalOpen);\n  };\n\n  return (\n    <>\n      <WorkModal\n        toggleModalOpen={toggleModalOpen}\n        onClose={toggleModalOpen}\n        open={modalOpen}\n        project={project}\n      />\n      <Card onClick={toggleModalOpen} background={project.background}>\n        <Title>{project.projectTitle}</Title>\n      </Card>\n    </>\n  );\n};\n\nWorkCard.propTypes = {\n  project: PropTypes.object.isRequired,\n};\n\nexport default WorkCard;\n"]},"metadata":{},"sourceType":"module"}