{"ast":null,"code":"var _jsxFileName = \"/Users/thomasnguyen/Documents/GitHub/react-portfolio/src/components/work/WorkCard.js\";\nimport React, { useState, useEffect, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport WorkModal from './WorkModal';\nimport media from 'styles/media';\nimport ImageGallery from 'react-image-gallery';\nconst Card = styled.div`\n  align-items: center;\n  border-radius: 20px;\n  cursor: pointer;\n  height: 15rem;\n  margin: auto;\n`;\nconst HoverInfo = styled.div`\n  transition: background-color 0.1s ease;\n  opacity: 0%;\n  position: relative;\n  z-index: 8;\n  &:hover {\n    background: black;\n    opacity 100%;\n  }\n`;\nconst infoContainer = styled.div`\n  display: grid;\n  grid-template-areas: \"Title\" \"Info\";\n  grid-template-columns: 100%;\n`;\nconst Title = styled.h2`\n  color: white;\n  margin: 0.8em;\n`;\nconst Info = styled.p`\ncolor: white;\n  font-family: arial;\n  margin: 1em;\n`;\nconst imagesContainer = styled.div`\nposition: relative;\nz-index: -1;\n`;\nconst unifyingContainer = styled.div`\nposition: absolute;\nheight: 100%;\nwidth: 100%;\n\n`;\n\nconst WorkCard = ({\n  project\n}) => {\n  const [modalOpen, setModalOpen] = useState(false);\n\n  const toggleModalOpen = () => {\n    document.querySelector('body').style.overflow = !modalOpen ? 'hidden' : 'initial';\n    setModalOpen(!modalOpen);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(WorkModal, {\n    toggleModalOpen: toggleModalOpen,\n    onClose: toggleModalOpen,\n    open: modalOpen,\n    project: project,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Card, {\n    onClick: toggleModalOpen,\n    background: project.background,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"unifyingContainer\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(\"imagesContainer\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 14\n    }\n  }, /*#__PURE__*/React.createElement(ImageGallery, {\n    items: project.images,\n    showBullets: false,\n    showThumbnails: false,\n    showFullscreenButton: false,\n    showPlayButton: false,\n    showNav: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(HoverInfo, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 14\n    }\n  }, /*#__PURE__*/React.createElement(\"infoContainer\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 21\n    }\n  }, project.projectTitle), /*#__PURE__*/React.createElement(Info, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 21\n    }\n  }, project.projectInfo))))));\n};\n\nWorkCard.propTypes = {\n  project: PropTypes.object.isRequired\n};\nexport default WorkCard;","map":{"version":3,"sources":["/Users/thomasnguyen/Documents/GitHub/react-portfolio/src/components/work/WorkCard.js"],"names":["React","useState","useEffect","useCallback","PropTypes","styled","WorkModal","media","ImageGallery","Card","div","HoverInfo","infoContainer","Title","h2","Info","p","imagesContainer","unifyingContainer","WorkCard","project","modalOpen","setModalOpen","toggleModalOpen","document","querySelector","style","overflow","background","images","projectTitle","projectInfo","propTypes","object","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,WAArC,QAAwD,OAAxD;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,KAAP,MAAkB,cAAlB;AACA,OAAOC,YAAP,MAAyB,qBAAzB;AAGA,MAAMC,IAAI,GAAGJ,MAAM,CAACK,GAAI;;;;;;CAAxB;AAQA,MAAMC,SAAS,GAAGN,MAAM,CAACK,GAAI;;;;;;;;;CAA7B;AAWA,MAAME,aAAa,GAAGP,MAAM,CAACK,GAAI;;;;CAAjC;AAMA,MAAMG,KAAK,GAAGR,MAAM,CAACS,EAAG;;;CAAxB;AAKA,MAAMC,IAAI,GAAGV,MAAM,CAACW,CAAE;;;;CAAtB;AAOA,MAAMC,eAAe,GAAGZ,MAAM,CAACK,GAAI;;;CAAnC;AAKA,MAAMQ,iBAAiB,GAAGb,MAAM,CAACK,GAAI;;;;;CAArC;;AAQA,MAAMS,QAAQ,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAiB;AAChC,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BrB,QAAQ,CAAC,KAAD,CAA1C;;AAEA,QAAMsB,eAAe,GAAG,MAAM;AAC5BC,IAAAA,QAAQ,CAACC,aAAT,CAAuB,MAAvB,EAA+BC,KAA/B,CAAqCC,QAArC,GAAgD,CAACN,SAAD,GAC5C,QAD4C,GAE5C,SAFJ;AAGAC,IAAAA,YAAY,CAAC,CAACD,SAAF,CAAZ;AACD,GALD;;AAOA,sBACE,uDACE,oBAAC,SAAD;AACE,IAAA,eAAe,EAAEE,eADnB;AAEE,IAAA,OAAO,EAAEA,eAFX;AAGE,IAAA,IAAI,EAAEF,SAHR;AAIE,IAAA,OAAO,EAAED,OAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAOE,oBAAC,IAAD;AAAM,IAAA,OAAO,EAAEG,eAAf;AAAgC,IAAA,UAAU,EAAEH,OAAO,CAACQ,UAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACK,oBAAC,YAAD;AACM,IAAA,KAAK,EAAER,OAAO,CAACS,MADrB;AAEM,IAAA,WAAW,EAAE,KAFnB;AAGM,IAAA,cAAc,EAAE,KAHtB;AAIM,IAAA,oBAAoB,EAAE,KAJ5B;AAKM,IAAA,cAAc,EAAE,KALtB;AAMM,IAAA,OAAO,EAAE,KANf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADL,CADJ,eAWI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQT,OAAO,CAACU,YAAhB,CADF,eAEE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOV,OAAO,CAACW,WAAf,CAFF,CADL,CAXJ,CADH,CAPF,CADF;AA8BD,CAxCD;;AA0CAZ,QAAQ,CAACa,SAAT,GAAqB;AACnBZ,EAAAA,OAAO,EAAEhB,SAAS,CAAC6B,MAAV,CAAiBC;AADP,CAArB;AAIA,eAAef,QAAf","sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport WorkModal from './WorkModal';\nimport media from 'styles/media';\nimport ImageGallery from 'react-image-gallery';\n\n\nconst Card = styled.div`\n  align-items: center;\n  border-radius: 20px;\n  cursor: pointer;\n  height: 15rem;\n  margin: auto;\n`;\n\nconst HoverInfo = styled.div`\n  transition: background-color 0.1s ease;\n  opacity: 0%;\n  position: relative;\n  z-index: 8;\n  &:hover {\n    background: black;\n    opacity 100%;\n  }\n`;\n\nconst infoContainer = styled.div`\n  display: grid;\n  grid-template-areas: \"Title\" \"Info\";\n  grid-template-columns: 100%;\n`;\n\nconst Title = styled.h2`\n  color: white;\n  margin: 0.8em;\n`;\n\nconst Info = styled.p`\ncolor: white;\n  font-family: arial;\n  margin: 1em;\n`;\n\n\nconst imagesContainer = styled.div`\nposition: relative;\nz-index: -1;\n`;\n\nconst unifyingContainer = styled.div`\nposition: absolute;\nheight: 100%;\nwidth: 100%;\n\n`;\n\n\nconst WorkCard = ({ project }) => {\n  const [modalOpen, setModalOpen] = useState(false);\n\n  const toggleModalOpen = () => {\n    document.querySelector('body').style.overflow = !modalOpen\n      ? 'hidden'\n      : 'initial';\n    setModalOpen(!modalOpen);\n  };\n\n  return (\n    <>\n      <WorkModal\n        toggleModalOpen={toggleModalOpen}\n        onClose={toggleModalOpen}\n        open={modalOpen}\n        project={project}\n      />\n      <Card onClick={toggleModalOpen} background={project.background}>\n         <unifyingContainer>\n             <imagesContainer>\n                  <ImageGallery\n                        items={project.images}\n                        showBullets={false}\n                        showThumbnails={false}\n                        showFullscreenButton={false}\n                        showPlayButton={false}\n                        showNav={false}\n                      />\n             </imagesContainer> \n             <HoverInfo>\n                  <infoContainer>\n                    <Title>{project.projectTitle}</Title>\n                    <Info>{project.projectInfo}</Info>\n                  </infoContainer>\n             </HoverInfo>\n         </unifyingContainer>\n      </Card>\n    </>\n  );\n};\n\nWorkCard.propTypes = {\n  project: PropTypes.object.isRequired,\n};\n\nexport default WorkCard;\n"]},"metadata":{},"sourceType":"module"}