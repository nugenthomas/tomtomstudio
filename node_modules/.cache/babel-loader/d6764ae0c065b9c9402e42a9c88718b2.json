{"ast":null,"code":"var _jsxFileName = \"/Users/thomasnguyen/Documents/GitHub/react-portfolio/src/components/GradientButton.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nconst ButtonOuter = styled.a`\n  align-items: center;\n  background: #12c2e9; /* fallback for old browsers */\n  background: linear-gradient(to right, #f64f59, #c471ed, #12c2e9);\n  border-radius: 50em;\n  display: inline-flex;\n  justify-content: center;\n  position: relative;\n  text-decoration: none;\n  transition: all 0.2s ease-in-out;\n  &:hover {\n    transform: scale(1.02);\n  }\n  &::after {\n    background: inherit;\n    border-radius: 50em;\n    bottom: 0;\n    content: '';\n    filter: blur(0px);\n    height: 100%;\n    left: 0;\n    opacity: 0.8;\n    position: absolute;\n    transition: all 0.2s ease-in-out;\n    width: 100%;\n    z-index: -1;\n  }\n  &:hover::after {\n    filter: blur(4px);\n  }\n`;\nconst ButtonInner = styled.span`\n  background: ${({\n  inverted,\n  theme\n}) => inverted ? theme.titleColor : theme.background};\n  border-radius: 50em;\n  color: ${({\n  inverted,\n  theme\n}) => inverted ? theme.background : theme.titleColor};\n  cursor: pointer;\n  font-family: ${({\n  theme\n}) => theme.fonts.body};\n  font-size: 1rem;\n  margin: 2px;\n  padding: 0.7rem;\n  padding-left: 2rem;\n  padding-right: 2rem;\n  white-space: nowrap;\n`;\n\nfunction GradientButton({\n  href,\n  text,\n  inverted,\n  icon,\n  target\n}) {\n  return /*#__PURE__*/React.createElement(ButtonOuter, {\n    href: href,\n    target: target || '_blank',\n    rel: \"noopener\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ButtonInner, {\n    inverted: inverted,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, icon && /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    style: {\n      marginRight: '1em'\n    },\n    icon: icon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 18\n    }\n  }), text.toUpperCase()));\n}\n\nGradientButton.propTypes = {\n  href: PropTypes.string.isRequired,\n  text: PropTypes.string.isRequired,\n  inverted: PropTypes.bool,\n  icon: PropTypes.oneOfType([PropTypes.string, PropTypes.array]),\n  target: PropTypes.string\n};\nexport default GradientButton;","map":{"version":3,"sources":["/Users/thomasnguyen/Documents/GitHub/react-portfolio/src/components/GradientButton.js"],"names":["React","PropTypes","styled","FontAwesomeIcon","ButtonOuter","a","ButtonInner","span","inverted","theme","titleColor","background","fonts","body","GradientButton","href","text","icon","target","marginRight","toUpperCase","propTypes","string","isRequired","bool","oneOfType","array"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,eAAT,QAAgC,gCAAhC;AAEA,MAAMC,WAAW,GAAGF,MAAM,CAACG,CAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAA7B;AAgCA,MAAMC,WAAW,GAAGJ,MAAM,CAACK,IAAK;gBAChB,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAD,KACZD,QAAQ,GAAGC,KAAK,CAACC,UAAT,GAAsBD,KAAK,CAACE,UAAW;;WAExC,CAAC;AAAEH,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAD,KACPD,QAAQ,GAAGC,KAAK,CAACE,UAAT,GAAsBF,KAAK,CAACC,UAAW;;iBAElC,CAAC;AAAED,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACG,KAAN,CAAYC,IAAK;;;;;;;CAPjD;;AAgBA,SAASC,cAAT,CAAwB;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,IAAR;AAAcR,EAAAA,QAAd;AAAwBS,EAAAA,IAAxB;AAA8BC,EAAAA;AAA9B,CAAxB,EAAgE;AAC9D,sBACE,oBAAC,WAAD;AAAa,IAAA,IAAI,EAAEH,IAAnB;AAAyB,IAAA,MAAM,EAAEG,MAAM,IAAI,QAA3C;AAAqD,IAAA,GAAG,EAAC,UAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD;AAAa,IAAA,QAAQ,EAAEV,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGS,IAAI,iBAAI,oBAAC,eAAD;AAAiB,IAAA,KAAK,EAAE;AAAEE,MAAAA,WAAW,EAAE;AAAf,KAAxB;AAAgD,IAAA,IAAI,EAAEF,IAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADX,EAEGD,IAAI,CAACI,WAAL,EAFH,CADF,CADF;AAQD;;AAEDN,cAAc,CAACO,SAAf,GAA2B;AACzBN,EAAAA,IAAI,EAAEd,SAAS,CAACqB,MAAV,CAAiBC,UADE;AAEzBP,EAAAA,IAAI,EAAEf,SAAS,CAACqB,MAAV,CAAiBC,UAFE;AAGzBf,EAAAA,QAAQ,EAAEP,SAAS,CAACuB,IAHK;AAIzBP,EAAAA,IAAI,EAAEhB,SAAS,CAACwB,SAAV,CAAoB,CAACxB,SAAS,CAACqB,MAAX,EAAmBrB,SAAS,CAACyB,KAA7B,CAApB,CAJmB;AAKzBR,EAAAA,MAAM,EAAEjB,SAAS,CAACqB;AALO,CAA3B;AAQA,eAAeR,cAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nconst ButtonOuter = styled.a`\n  align-items: center;\n  background: #12c2e9; /* fallback for old browsers */\n  background: linear-gradient(to right, #f64f59, #c471ed, #12c2e9);\n  border-radius: 50em;\n  display: inline-flex;\n  justify-content: center;\n  position: relative;\n  text-decoration: none;\n  transition: all 0.2s ease-in-out;\n  &:hover {\n    transform: scale(1.02);\n  }\n  &::after {\n    background: inherit;\n    border-radius: 50em;\n    bottom: 0;\n    content: '';\n    filter: blur(0px);\n    height: 100%;\n    left: 0;\n    opacity: 0.8;\n    position: absolute;\n    transition: all 0.2s ease-in-out;\n    width: 100%;\n    z-index: -1;\n  }\n  &:hover::after {\n    filter: blur(4px);\n  }\n`;\n\nconst ButtonInner = styled.span`\n  background: ${({ inverted, theme }) =>\n    inverted ? theme.titleColor : theme.background};\n  border-radius: 50em;\n  color: ${({ inverted, theme }) =>\n    inverted ? theme.background : theme.titleColor};\n  cursor: pointer;\n  font-family: ${({ theme }) => theme.fonts.body};\n  font-size: 1rem;\n  margin: 2px;\n  padding: 0.7rem;\n  padding-left: 2rem;\n  padding-right: 2rem;\n  white-space: nowrap;\n`;\n\nfunction GradientButton({ href, text, inverted, icon, target }) {\n  return (\n    <ButtonOuter href={href} target={target || '_blank'} rel=\"noopener\">\n      <ButtonInner inverted={inverted}>\n        {icon && <FontAwesomeIcon style={{ marginRight: '1em' }} icon={icon} />}\n        {text.toUpperCase()}\n      </ButtonInner>\n    </ButtonOuter>\n  );\n}\n\nGradientButton.propTypes = {\n  href: PropTypes.string.isRequired,\n  text: PropTypes.string.isRequired,\n  inverted: PropTypes.bool,\n  icon: PropTypes.oneOfType([PropTypes.string, PropTypes.array]),\n  target: PropTypes.string,\n};\n\nexport default GradientButton;\n"]},"metadata":{},"sourceType":"module"}