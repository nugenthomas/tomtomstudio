{"ast":null,"code":"var _jsxFileName = \"/Users/thomasnguyen/Documents/GitHub/react-portfolio/src/components/work/WorkCard.js\";\nimport React, { useState, useEffect, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport WorkModal from './WorkModal';\nimport media from 'styles/media';\nimport ImageGallery from 'react-image-gallery';\nconst Card = styled.div`\n  align-items: center;\n  border-radius: 20px;\n  cursor: pointer;\n  display: flex;\n  height: 15rem;\n  justify-content: center;\n  margin: auto;\n  position: relative;\n  width: 100%;\n  background-color: blue;\n`;\nconst infoContainer = styled.div`\n  display: grid;\n  grid-template-areas: \"Title\" \"Info\";\n  grid-template-columns: 100%;\n  position: relative;\n`;\nconst Title = styled.h2`\n  color: white;\n  margin: 0.8em;\n`;\nconst Info = styled.p`\n  font-family: arial;\n  margin: 1em;\n`;\nconst onImageLoad = useCallback((() => {\n  let count = 0;\n  return () => {\n    count += 1;\n\n    if (count === project.images.length) {\n      setImagesLoaded(true);\n    }\n  };\n})(), [project, open]);\n\nconst WorkCard = ({\n  project\n}) => {\n  const [modalOpen, setModalOpen] = useState(false);\n\n  const toggleModalOpen = () => {\n    document.querySelector('body').style.overflow = !modalOpen ? 'hidden' : 'initial';\n    setModalOpen(!modalOpen);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(WorkModal, {\n    toggleModalOpen: toggleModalOpen,\n    onClose: toggleModalOpen,\n    open: modalOpen,\n    project: project,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Card, {\n    onClick: toggleModalOpen,\n    background: project.background,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"infoContainer\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, project.projectTitle), /*#__PURE__*/React.createElement(Info, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, project.projectInfo)), /*#__PURE__*/React.createElement(ImageGallery, {\n    onImageLoad: onImageLoad,\n    items: project.images,\n    showBullets: true,\n    showThumbnails: false,\n    showFullscreenButton: true,\n    showPlayButton: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  })));\n};\n\nWorkCard.propTypes = {\n  project: PropTypes.object.isRequired\n};\nexport default WorkCard;","map":{"version":3,"sources":["/Users/thomasnguyen/Documents/GitHub/react-portfolio/src/components/work/WorkCard.js"],"names":["React","useState","useEffect","useCallback","PropTypes","styled","WorkModal","media","ImageGallery","Card","div","infoContainer","Title","h2","Info","p","onImageLoad","count","project","images","length","setImagesLoaded","open","WorkCard","modalOpen","setModalOpen","toggleModalOpen","document","querySelector","style","overflow","background","projectTitle","projectInfo","propTypes","object","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,WAArC,QAAwD,OAAxD;AAGA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,KAAP,MAAkB,cAAlB;AACA,OAAOC,YAAP,MAAyB,qBAAzB;AAGA,MAAMC,IAAI,GAAGJ,MAAM,CAACK,GAAI;;;;;;;;;;;CAAxB;AAYA,MAAMC,aAAa,GAAGN,MAAM,CAACK,GAAI;;;;;CAAjC;AAOA,MAAME,KAAK,GAAGP,MAAM,CAACQ,EAAG;;;CAAxB;AAKA,MAAMC,IAAI,GAAGT,MAAM,CAACU,CAAE;;;CAAtB;AAKA,MAAMC,WAAW,GAAGb,WAAW,CAC3B,CAAC,MAAM;AACL,MAAIc,KAAK,GAAG,CAAZ;AACA,SAAO,MAAM;AACXA,IAAAA,KAAK,IAAI,CAAT;;AACA,QAAIA,KAAK,KAAKC,OAAO,CAACC,MAAR,CAAeC,MAA7B,EAAqC;AACnCC,MAAAA,eAAe,CAAC,IAAD,CAAf;AACD;AACF,GALD;AAMD,CARD,GAD2B,EAU3B,CAACH,OAAD,EAAUI,IAAV,CAV2B,CAA/B;;AAaA,MAAMC,QAAQ,GAAG,CAAC;AAAEL,EAAAA;AAAF,CAAD,KAAiB;AAChC,QAAM,CAACM,SAAD,EAAYC,YAAZ,IAA4BxB,QAAQ,CAAC,KAAD,CAA1C;;AAEA,QAAMyB,eAAe,GAAG,MAAM;AAC5BC,IAAAA,QAAQ,CAACC,aAAT,CAAuB,MAAvB,EAA+BC,KAA/B,CAAqCC,QAArC,GAAgD,CAACN,SAAD,GAC5C,QAD4C,GAE5C,SAFJ;AAGAC,IAAAA,YAAY,CAAC,CAACD,SAAF,CAAZ;AACD,GALD;;AAOA,sBACE,uDACE,oBAAC,SAAD;AACE,IAAA,eAAe,EAAEE,eADnB;AAEE,IAAA,OAAO,EAAEA,eAFX;AAGE,IAAA,IAAI,EAAEF,SAHR;AAIE,IAAA,OAAO,EAAEN,OAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAOE,oBAAC,IAAD;AAAM,IAAA,OAAO,EAAEQ,eAAf;AAAgC,IAAA,UAAU,EAAER,OAAO,CAACa,UAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQb,OAAO,CAACc,YAAhB,CADA,eAEA,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOd,OAAO,CAACe,WAAf,CAFA,CADF,eAKE,oBAAC,YAAD;AACY,IAAA,WAAW,EAAEjB,WADzB;AAEY,IAAA,KAAK,EAAEE,OAAO,CAACC,MAF3B;AAGY,IAAA,WAAW,EAAE,IAHzB;AAIY,IAAA,cAAc,EAAE,KAJ5B;AAKY,IAAA,oBAAoB,EAAE,IALlC;AAMY,IAAA,cAAc,EAAE,KAN5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CAPF,CADF;AAwBD,CAlCD;;AAoCAI,QAAQ,CAACW,SAAT,GAAqB;AACnBhB,EAAAA,OAAO,EAAEd,SAAS,CAAC+B,MAAV,CAAiBC;AADP,CAArB;AAIA,eAAeb,QAAf","sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\n\n\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport WorkModal from './WorkModal';\nimport media from 'styles/media';\nimport ImageGallery from 'react-image-gallery';\n\n\nconst Card = styled.div`\n  align-items: center;\n  border-radius: 20px;\n  cursor: pointer;\n  display: flex;\n  height: 15rem;\n  justify-content: center;\n  margin: auto;\n  position: relative;\n  width: 100%;\n  background-color: blue;\n`;\nconst infoContainer = styled.div`\n  display: grid;\n  grid-template-areas: \"Title\" \"Info\";\n  grid-template-columns: 100%;\n  position: relative;\n`;\n\nconst Title = styled.h2`\n  color: white;\n  margin: 0.8em;\n`;\n\nconst Info = styled.p`\n  font-family: arial;\n  margin: 1em;\n`;\n\nconst onImageLoad = useCallback(\n    (() => {\n      let count = 0;\n      return () => {\n        count += 1;\n        if (count === project.images.length) {\n          setImagesLoaded(true);\n        }\n      };\n    })(),\n    [project, open],\n  );\n\nconst WorkCard = ({ project }) => {\n  const [modalOpen, setModalOpen] = useState(false);\n\n  const toggleModalOpen = () => {\n    document.querySelector('body').style.overflow = !modalOpen\n      ? 'hidden'\n      : 'initial';\n    setModalOpen(!modalOpen);\n  };\n\n  return (\n    <>\n      <WorkModal\n        toggleModalOpen={toggleModalOpen}\n        onClose={toggleModalOpen}\n        open={modalOpen}\n        project={project}\n      />\n      <Card onClick={toggleModalOpen} background={project.background}>\n        <infoContainer>\n        <Title>{project.projectTitle}</Title>\n        <Info>{project.projectInfo}</Info>\n        </infoContainer>\n        <ImageGallery\n                    onImageLoad={onImageLoad}\n                    items={project.images}\n                    showBullets={true}\n                    showThumbnails={false}\n                    showFullscreenButton={true}\n                    showPlayButton={false}\n                  />\n      </Card>\n    </>\n  );\n};\n\nWorkCard.propTypes = {\n  project: PropTypes.object.isRequired,\n};\n\nexport default WorkCard;\n"]},"metadata":{},"sourceType":"module"}